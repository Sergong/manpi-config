---
- name: Install or Update and configure pihole using docker image
  hosts: local
  become: true
  gather_facts: true

  vars:
    manjaro_family: Archlinux
    ubuntu_family: Debian

  tasks:
    - name: Ensure pip3 is installed on Manjaro
      package:
        name: python-pip
        state: present
      when: ansible_os_family == manjaro_family

    - name: Ensure pip3 is installed on Ubuntu
      package:
        name: python3-pip
        state: present
      when: ansible_os_family == ubuntu_family

    - name: Ensure DNS changes for Ubuntu are applied
      block:
        - name: Ensure DNS Stub is disabled for systemd-resolved on Ubuntu
          lineinfile:
            path: /etc/systemd/resolved.conf
            regexp: "^#DNSStubListener=yes"
            line: "DNSStubListener=no"

        - name: Ensure /etc/resolved.conf points to the correct file
          file:
            src: /run/systemd/resolve/resolv.conf
            dest: /etc/resolv.conf
            state: link
            force: true
          notify: Restart systemd-resolved
      when: ansible_os_family == ubuntu_family

    - name: Ensure docker python module is installed
      pip:
        name: docker
        state: present

    - name: Pull docker image from docker registry
      community.general.docker_image:
        name: pihole/pihole
        tag: latest
        source: pull
        force_source: false
        state: present
      register: docker_result

    - name: Docker Build Debug message
      debug:
        msg: "Image pull successful"
      when: not docker_result.failed

    - name: Remove the existing Docker image
      community.general.docker_container:
        name: pihole
        state: absent
        force_kill: true
        container_default_behavior: compatibility
      when: not docker_result.failed

    - name: start container
      community.general.docker_container:
        name: pihole
        image: "pihole/pihole:latest"
        state: started
        tty: true
        published_ports:
          - '53:53/tcp'
          - '53:53/udp'
          - '80:80'
          - '443:443'
        #network_mode: host
        env:
          TZ: 'Europe/London'
          VIRTUAL_HOST: 'pi.hole'
          PROXY_LOCATION: 'pi.hole'
          WEBPASSWORD: "{{ pi_pass }}"
        hostname: pi.hole
        volumes:
          - '~/etc-pihole/:/etc/pihole/'
          - '~/etc-dnsmasq.d/:/etc/dnsmasq.d/'
        restart_policy: unless-stopped
        capabilities:
          - NET_ADMIN
        privileged: true
        container_default_behavior: compatibility
      when: not docker_result.failed

  handlers:
    - name: Restart systemd-resolved
      service:
        name: systemd-resolved.service
        state: restarted